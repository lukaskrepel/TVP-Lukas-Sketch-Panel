//Preparing
//tv_UndoOpenStack
//tv_UpdateUndo
message = "Rendering all clips with XML file..."
tv_LockDisplay message

//Remembering current clip, layer and frame
//tv_ClipCurrentID
//beginClip = result
//tv_LayerCurrentID
//BeginLayer = result
//tv_LayerGetImage
//beginImage = result

//
tv_GetProjectName
ProjectPath = result
tv_WriteTextFile "Exists" '"'ProjectPath'"'
TestPath = result
// *** Check if file is saved
IF CMP(TestPath,ProjectPath) == 0 || CMP(ProjectPath, "/") == 1 //TestPath is voor windows, slash-check is voor mac? Misschien is TestPath wel overbodig en kan t uberhaupt met alleen de slash-check.
	tv_Warn "Please save project and try again!"
	EXIT
END

tv_Request "Image type?|JPG|PNG" //1|0
IF CMP(result, 1)
	imageType = jpg
ELSE
	imageType = png
END

// *** Get project info
tv_ProjectInfo
PARSE result ProjectName projectWidth ProjectHeight projectPixelAspect projectFramerate projectField projectProjectStartFrame
tv_FirstImage
ProjectIn = result
tv_LastImage
ProjectOut = result
ProjectPath = Replace(ProjectPath,'\','/') //Making the script work on Windows and Unix, Windows has directory seperated by \ and mac and linux with /
StrLen = LEN(ProjectPath)
last = LastPos(ProjectPath, "/") // Getting the directory where the TVPP file is saved
ProjectDir = LeftString(ProjectPath,Last - 1) // Getting the directory where the TVPP file is saved
ProjectName = RightString(ProjectPath, StrLen - Last) //Getting the name of the tvpp file without the path
StrLen = LEN(ProjectName) //Getting the name of the tvpp file without ".tvpp"

last = LastPos(ProjectName, ".")
IF CMP(last, "0") == 1
	ProjectBase = ProjectName
ELSE
	ProjectBase = LeftString(ProjectName,Last - 1)
END
last_v = FindString(ProjectBase, "_v", 1) //File should be name _v001_L or something
IF CMP(last_v, "0") == 1
	ProjectName = ProjectBase
ELSE
	ProjectName = LeftString(ProjectBase,last_v-1)
END


// *** Create folder
FOR i = 1 TO 1000
	RenderFolder = ProjectName"_clips"i
	SaveDir = ProjectDir"/"RenderFolder
	tv_WriteTextFile "Exists" '"'SaveDir'"'
	IF CMP (result, "") == 1 //Folder doesn't exist yet!
		ProjectName = RenderFolder
		i = 1001
	END
END
SaveDir = ProjectDir"/"ProjectName
tv_Request "Render all clips as ."imageType" sequences in subfolders of '"SaveDir"'?|OK|Cancel" //1|0
IF result == 0
	EXIT
END
tv_WriteTextFile "MkDir" '"'SaveDir'"'
TotalXMLfile = SaveDir"/"ProjectName".xml"
XMLbegin(TotalXMLfile, ProjectName, ProjectIn, ProjectOut, projectFramerate)

// ****** test
tv_ProjectDuplicate


// **********************************
// *** ALLE CLIPS DOORLOPEN START ***
// **********************************
loop=1
i=0
AddSomeFrames = 0
colorLabel = "Blue"
WHILE loop
	tv_ClipEnumID -1 i
 	clipID = result
	IF CMP(clipID, "none") == 1
		loop=0
	ELSE
		tv_ClipHidden clipID
		IF CMP(result, "0") == 1
			tv_ClipSelect clipID
		END
	END
	i=i+1
	IF CMP(clipID, "none") == 0
		IF CMP(colorLabel, "Blue")
			colorLabel = "Rose"
		ELSE
			colorLabel = "Blue"
		END
		tv_ClipName
		ClipName = result
		ClipName = i"_"ClipName // 001_Untitled for example
		// *** Fix multiply layers if working on both standard and Pro TVPaint versions
		FixMultiply()
		PARAM none

		IF CMP(imageType, "png")
			tv_SaveMode "PNG"
			ext = ".png"
			tv_AlphaSaveMode "PreMultiply" // Of moet dit NoPreMultiply zijn?
			tv_Background "NONE"
		ELSE
			tv_SaveMode "JPG"
			ext = ".jpg"
			tv_Background "COLOR"
		END
			//
		// Save Current Frame So I can set the timelinecursor back at the end of the script
		tv_LayerGetImage
		StartImage = result
		//WAARSCHUWING: shot 001 moet "/001" heten. Ik denk dat de clip gewoon "Walk_R" mag heten			
		renderDir = ProjectDir"/"RenderFolder
		clipDir = ProjectDir"/"RenderFolder"/"ClipName
		tv_WriteTextFile "MkDir" '"'renderDir'"'
		tv_WriteTextFile "MkDir" '"'clipDir'"'
		// Here I get the in point and out point of the clip if the marks is disabled I get the clip in out instead
		//get clip in
		tv_MarkIn clip
		PARSE result frame state
		IF CMP(state, "set ") == 1
			InPoint = frame
		ELSE
			tv_FirstImage
			InPoint = result
		END
		//Get Clip Out
		tv_MarkOut clip
		PARSE result frame state
		IF CMP(state, "set ") == 1
			OutPoint = frame
		ELSE
			tv_LastImage
			OutPoint = result
		END
		// findProjectInout
		// Because I have to use tv_Projectsavesequence to use the camera out I have to get the clip in and out in the project timeline
		// for this I use tv_Projectcurrentframe
		tv_LayerImage InPoint
		tv_Projectcurrentframe
		ProjIn = result
		tv_Projectcurrentframe ProjIn
		tv_LayerImage OutPoint
		tv_Projectcurrentframe
		ProjOut = result
		tv_Projectcurrentframe ProjOut
		// getting the name of the current clip to file prefix
		tv_StartFrame
		StartFrame = InPoint + result
		// setting the name of the first file
		frame = addZeros("_",StartFrame,5)
		RenderFile = clipDir"/"ClipName""frame""ext
		// saving the sequence
		//tv_UpdateUndo
		//tv_UndoOpenStack
		//Create a layer at the in and out point in case we need to render an empty alpha frame to reach in/out of the clip
		tv_LayerCreate tempLayer
		tempLayerID = result
		tv_LayerAnim
		tv_LayerShift tempLayerID InPoint
		tv_LayerPostBehavior layerID "hold"
		tv_LayerCreate tempLayer
		tempLayerID = result
		tv_LayerAnim
		tv_LayerShift tempLayerID OutPoint
		tv_LayerPreBehavior tempLayerID "hold"
		tv_LayerMergeAll
		ExportImagesAndXML(clipDir, ClipName, InPoint, OutPoint)
		//tv_undoCloseStack
		//tv_undo
		//tv_Projectsavesequence '"'RenderFile'"' ProjIn ProjOut "camera" //OLD
		// setting the current frame again
		tv_LayerImage StartImage
	END
	tv_Background "COLOR" //Turn color background back on.
END
// *** End of clip loop ***

// ** End overall XML
XMLend(TotalXMLfile)

//Resetting layer and frame to starting position
//tv_ClipSelect beginClip
//tv_LayerImage beginImage
//tv_LayerSet BeginLayer

//Finishing
tv_ProjectClose
//tv_undoclosestack
//tv_Unlockdisplay
tv_Warn "ALL CLIPS RENDERED."



// *****************************
// *** Include extra functions
// *****************************
#INCLUDE "Include.grg"

// ***********************
// *** Render images and save XML
// ***********************
FUNCTION ExportImagesAndXML(SaveDir, ClipName, InPoint, OutPoint)
	renderStart = InPoint
	renderEnd = OutPoint
	offsetSTART= renderStart - InPoint + 1
	offsetEND = renderEnd - InPoint + 1
	// *** Get info
	//todo
	//tv_ClipName ClipID
	//RenderName = result
	//
	ClipXMLfile = SaveDir"/"ClipName".xml" // !!!!!!!!!!!!!!!!!!
	sequenceIn = InPoint + 1
	sequenceOut = OutPoint + 1
	// *** Write info
	XMLbegin(ClipXMLfile, ClipName, sequenceIn, sequenceOut, projectFramerate)
	// *** Start saving image files
	CurImage = renderStart
	WHILE CurImage <= renderEnd
		tv_LayerImage CurImage
		offsetImage = CurImage - InPoint + 1
		frame = offsetImage + renderStart
		prefixedFrame = addZeros("_",frame,5)
		fileName = ClipName""prefixedFrame""ext
		filePath = SaveDir"/"fileName
		//Show message
		Message = CONCAT("Rendering all clips with XML file | ", (filePath))
		tv_LockDisplay Message
		//
		frameEnd = frame + 1 //todo uitvogelen
		// *** TODO HACK FIXEN
		tv_saveDisplay filePath //houdt geen rekening met camera
		//tv_SaveImage filePath //doet alleen 1 frame, dus zou je bij jpg een witte bg achter moeten mergen, en dan nog doet ie geen camera denk ik
		//tv_Warn filePath
		//tv_Warn frame
		//tv_Warn frameEnd
		//tv_ProjectSaveSequence filePath "camera" frame frameEnd //????
		
		//tv_Warn "nu zou er een plaatje moeten bestaan"



		frameStart = frame
		tv_exposureNext //Goes to next exposure
		CurImage = result
		// *** Find next frame
		tv_LayerImage CurImage
		offsetImage = CurImage - InPoint + 1
		frame = offsetImage + renderStart
		frameEnd = frame
		// *** Check if we reached the last frame
		tv_exposureinfo CurImage
		PARSE result type rest
		XMLimage(ClipXMLfile, fileName, filePath, frameStart, frameEnd, projectWidth, ProjectHeight, 0)
		XMLimage(TotalXMLfile, fileName, filePath, frameStart, frameEnd, projectWidth, ProjectHeight, AddSomeFrames)
		IF CMP(type, "Head") == 0 || CurImage >= sequenceOut //todo OF ALS we verder zijn dan OutPointje
			AddSomeFrames = AddSomeFrames - InPoint - 1 + frameEnd
			CurImage=renderEnd+1
		END
	END
	XMLend(ClipXMLfile)
END

// *********************************************************************************************
// *** Set layers named "*_Multiply" to multiply. And name all multiplied layers "*_Multiply"
// *********************************************************************************************
FUNCTION FixMultiply()
	SearchWord = Multiply
	tv_LayerCurrentID
	BeginLayer = result
	LayerRun = 1
	LayerPos = 0
	WHILE LayerRun
		tv_LayerGetID LayerPos
		layerID = result
		IF CMP(layerID, "NONE") == 0
			// START RUN ON LAYER
			tv_LayerInfo layerID
			PARSE result LayerDisplay LayerPosition LayerOpacity LayerName LayerType LayerStart LayerEnd LayerPreLightTable LayerPostLightTable LayerSelection
	                last = LastPos(LayerName, "_")
	                StrLen = LEN(LayerName)
	                IF CMP(last,0)
	                    FirstWord = LayerName
	                ELSE
	                FirstWord = LeftString(LayerName,Last - 1)
	                END
	                SecondWord = RightString(LayerName, StrLen - Last)
			IF CMP(SecondWord, SearchWord)
				tv_Layerblendingmode layerID Multiply
			END
	                tv_Layerblendingmode layerID
	                IF CMP(result, Multiply)
	                        MultiplyLayerName = FirstWord"_Multiply"
	                        tv_LayerRename layerID MultiplyLayerName
	                END
			// END RUN ON LAYER
			LayerPos = LayerPos+1	
		ELSE		
			LayerRun = 0
		END
	END
	tv_LayerSet BeginLayer
END

// **************************************************************************************
// *** Add a prefix and extra zeros to a number, to turn "2" into "_00002" for example
// **************************************************************************************
FUNCTION addZeros(prefix,number,digits)
	LOCAL current i
	current = LEN(number)
	digits = digits - 1
	FOR i = current TO digits
		prefix = prefix"0"
	END
	prefix = prefix""number
	RETURN prefix
END

// ******************************
// *** Write start of XML file
// ******************************
function XMLbegin(XMLfile, sequenceName, sequenceIn, sequenceOut, projectFramerate)
	tv_WriteTextFile "Create" '"'XMLfile'"' "<xmeml version="'"4"'">" //klopt
	sequenceNameWithQuotes = '"'sequenceName'"'
  	tv_WriteTextFile "Append" '"'XMLfile'"' "<sequence id="sequenceNameWithQuotes">" //SEQUENCE NAME (moet tussen quotes?)
	tv_WriteTextFile "Append" '"'XMLfile'"' "<uuid>69b229de-c9e4-410e-869c-c77e560b4e18</uuid>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<name>"RenderName"</name>" //SEQUENCE NAME
   	tv_WriteTextFile "Append" '"'XMLfile'"' "<duration>0</duration>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<timebase>"projectFramerate"</timebase>" //FRAMERATE
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<ntsc>false</ntsc>"
 	tv_WriteTextFile "Append" '"'XMLfile'"' "</rate>"
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<in>"sequenceIn"</in>" //IN
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<out>"sequenceOut"</out>" //OUT
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<timecode>"
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<string>00:00:00:00</string>"
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<frame>0</frame>"
  	tv_WriteTextFile "Append" '"'XMLfile'"' "<displayformat>NDF</displayformat>"
  	tv_WriteTextFile "Append" '"'XMLfile'"' "<rate>"
  	tv_WriteTextFile "Append" '"'XMLfile'"' "<timebase>"projectFramerate"</timebase>" //FRAMERATE
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<ntsc>false</ntsc>"
 	tv_WriteTextFile "Append" '"'XMLfile'"' "</rate>"
  	tv_WriteTextFile "Append" '"'XMLfile'"' "</timecode>"
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<media>"
 	tv_WriteTextFile "Append" '"'XMLfile'"' "<video>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<format>"
   	tv_WriteTextFile "Append" '"'XMLfile'"' "<samplecharacteristics>"
   	tv_WriteTextFile "Append" '"'XMLfile'"' "<width>"projectWidth"</width>" //PROJECT WIDTH
	tv_WriteTextFile "Append" '"'XMLfile'"' "<height>"ProjectHeight"</height>" //PROJECT HEIGHT
	tv_WriteTextFile "Append" '"'XMLfile'"' "<rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<timebase>"projectFramerate"</timebase>" //FRAMERATE
	tv_WriteTextFile "Append" '"'XMLfile'"' "<ntsc>false</ntsc>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<pixelaspectratio>square</pixelaspectratio>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<anamorphic>false</anamorphic>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</samplecharacteristics>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</format>"
   	tv_WriteTextFile "Append" '"'XMLfile'"' "<track MZ.TrackName="'"video"'">"
   	tv_WriteTextFile "Append" '"'XMLfile'"' "<enabled>true</enabled>"
   	tv_WriteTextFile "Append" '"'XMLfile'"' "<locked>false</locked>"
end

// ****************************************************
// *** Write middle part of XML file, for each image
// ****************************************************
function XMLimage(XMLfile, fileName, filePath, frameStart, frameEnd, width, height, AddSomeFrames)
	frameStart = frameStart - InPoint - 1 + AddSomeFrames
	frameEnd = frameEnd - InPoint - 1 + AddSomeFrames
	fileNameWithQuotes = '"'fileName'"'
	tv_WriteTextFile "Append" '"'XMLfile'"' "<clipitem id="fileNameWithQuotes">" //FILENAAM (moet tussen quotes?)
	tv_WriteTextFile "Append" '"'XMLfile'"' "<masterclipid>"fileName"</masterclipid>" //FILENAAM
	tv_WriteTextFile "Append" '"'XMLfile'"' "<name>"fileName"</name>" //FILENAAM
	tv_WriteTextFile "Append" '"'XMLfile'"' "<enabled>true</enabled>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<duration>25</duration>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<timebase>25</timebase>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<ntsc>false</ntsc>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<start>"frameStart"</start>" //StartFrame
	tv_WriteTextFile "Append" '"'XMLfile'"' "<end>"frameEnd"</end>" //EINDFRAME
	tv_WriteTextFile "Append" '"'XMLfile'"' "<in>0</in>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<out>25.0</out>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<alphatype/>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<pixelaspectratio/>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<anamorphic/>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<file id="fileNameWithQuotes">" //FILENAAM (moet tussen quotes?)
	tv_WriteTextFile "Append" '"'XMLfile'"' "<name/>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<pathurl>"filePath"</pathurl>" //filePath
	tv_WriteTextFile "Append" '"'XMLfile'"' "<rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<timebase>25</timebase>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<ntsc>false</ntsc>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<timecode>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<string>00:00:00:00</string>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<frame>0</frame>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<displayformat>NDF</displayformat>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<timebase>"projectFramerate"</timebase>" //FRAMERATE
	tv_WriteTextFile "Append" '"'XMLfile'"' "<ntsc>false</ntsc>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</timecode>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<media>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<video>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<samplecharacteristics>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<width>"projectWidth"</width>" //RESOLUTIE.X
	tv_WriteTextFile "Append" '"'XMLfile'"' "<height>"ProjectHeight"</height>" //RESOLUTIE.Y
	tv_WriteTextFile "Append" '"'XMLfile'"' "<rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<timebase>25</timebase>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<ntsc>false</ntsc>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</rate>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<pixelaspectratio>square</pixelaspectratio>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<anamorphic>false</anamorphic>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</samplecharacteristics>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</video>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</media>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</file>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<labels>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "<labels/>"
	tv_WriteTextFile "Append" '"'XMLfile'"'  "<label2>"colorLabel"</label2>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</labels>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</clipitem>"
END

// ******************************
// *** Write end of XML file
// ******************************
FUNCTION XMLend(XMLfile)
	tv_WriteTextFile "Append" '"'XMLfile'"' "</track>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</video>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</media>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</labels>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</sequence>"
	tv_WriteTextFile "Append" '"'XMLfile'"' "</xmeml>"
END